name: build

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:

  source:
    name: Build source package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: docker://python
        with:
          args: 'sh -c "pip install build && python -m build --sdist"'

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*
          
  wheels:
    name: Build binary packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [auto]
        include:
        - os: 'ubuntu-latest'
          arch: 'aarch64'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade cibuildwheel
 
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}   
      - uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*
          
  publish:
    name: Publish to PyPI
    runs-on: [ubuntu-latest]
    needs: [source, wheels]
    

    steps:
      - uses: actions/download-artifact@v2

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: artifact/
